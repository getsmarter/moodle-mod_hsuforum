{"version":3,"sources":["../src/mod_hsuforum_editor_toggle.js"],"names":["define","init","selector","targetnode","config","attributes","childList","subtree","observer","MutationObserver","mutationlist","mutation","type","addedNodes","length","forEach","node","classList","contains","button","querySelector","click","el","document","getElementById","range","createRange","sel","window","getSelection","innerHTML","setStart","childNodes","collapse","removeAllRanges","addRange","focus","e","onload","currentbuttons","body","scrollTop","documentElement","observe"],"mappings":"mnCAAAA,OAAM,2CAAC,EAAD,CAAK,UAAW,CAClB,MAAO,CACHC,IAAI,CAAE,cAASC,CAAT,CAAmB,IACjBC,CAAAA,CADiB,CAIfC,CAAM,CAAG,CAAEC,UAAU,GAAZ,CAAqBC,SAAS,GAA9B,CAAsCC,OAAO,GAA7C,CAJM,CAMfC,CAAQ,CAAG,GAAIC,CAAAA,gBAAJ,CAAqB,SAASC,CAAT,CAAiC,kCAC5CA,CAD4C,QACnE,2BAAqC,IAA1BC,CAAAA,CAA0B,SACjC,GAAI,CACA,GAAsB,WAAlB,GAAAA,CAAQ,CAACC,IAAT,EAAiCD,CAAQ,CAACE,UAAT,CAAoBC,MAAzD,CAAiE,CAE7DH,CAAQ,CAACE,UAAT,CAAoBE,OAApB,CAA4B,SAASC,CAAT,CAAe,CAEvC,GAAIA,CAAI,CAACC,SAAL,WAAgCD,CAAI,CAACC,SAAL,CAAeC,QAAf,CAAwB,wBAAxB,CAApC,CAAuF,CACnF,GAAIC,CAAAA,CAAM,CAAGH,CAAI,CAACI,aAAL,CAAmB,wBAAnB,CAAb,CACA,GAAID,CAAJ,CAAY,CACRA,CAAM,CAACE,KAAP,GADQ,GAKJC,CAAAA,CAAE,CAAGC,QAAQ,CAACC,cAAT,CAAwB,8BAAxB,CALD,CAMJC,CAAK,CAAGF,QAAQ,CAACG,WAAT,EANJ,CAOJC,CAAG,CAAGC,MAAM,CAACC,YAAP,EAPF,CAQRP,CAAE,CAACQ,SAAH,CAAe,UAAf,CACAL,CAAK,CAACM,QAAN,CAAeT,CAAE,CAACU,UAAH,CAAc,CAAd,CAAf,CAAiC,CAAjC,EACAP,CAAK,CAACQ,QAAN,KACAN,CAAG,CAACO,eAAJ,GACAP,CAAG,CAACQ,QAAJ,CAAaV,CAAb,EACAH,CAAE,CAACc,KAAH,GACA,MACH,CACJ,CACJ,CArBD,CAsBH,CACJ,CAAC,MAAOC,CAAP,CAAU,CAEX,CACJ,CA/BkE,+BAgCtE,CAhCgB,CANI,CAwCrBT,MAAM,CAACU,MAAP,CAAgB,UAAW,CAEvBnC,CAAU,CAAGoB,QAAQ,CAACH,aAAT,CAAuBlB,CAAvB,CAAb,CAEA,GAAIqC,CAAAA,CAAc,CAAGhB,QAAQ,CAACH,aAAT,CAAuB,wBAAvB,CAArB,CAEA,GAAImB,CAAJ,CAAoB,CAChBA,CAAc,CAAClB,KAAf,GACAE,QAAQ,CAACiB,IAAT,CAAcC,SAAd,CAA0BlB,QAAQ,CAACmB,eAAT,CAAyBD,SAAzB,CAAqC,CAClE,CAGDjC,CAAQ,CAACmC,OAAT,CAAiBxC,CAAjB,CAA6BC,CAA7B,CACH,CACJ,CAvDE,CAyDV,CA1DK,CAAN","sourcesContent":["define([], function() {\n    return {\n        init: function(selector) {\n            var targetnode;\n\n            // Options for the observer (which mutations to observe)\n            const config = { attributes: false, childList: true, subtree: true };\n\n            const observer = new MutationObserver(function(mutationlist, observer) {\n                for (const mutation of mutationlist) {\n                    try {\n                        if (mutation.type === 'childList' && mutation.addedNodes.length) {\n                            // Iterate over added nodes and check if the wrapper\n                            mutation.addedNodes.forEach(function(node) {\n                                // If it is the wrapper, find button and click it\n                                if (node.classList !== undefined && node.classList.contains('hsuforum-reply-wrapper')) {\n                                    var button = node.querySelector('.hsuforum-use-advanced');\n                                    if (button) {\n                                        button.click();\n\n                                        // Because it is not a true textarea but rather contenteditable attr\n                                        // we need to force a range in order to focus. This is done by inserting zero-width space\n                                        var el = document.getElementById(\"hiddenadvancededitoreditable\");\n                                        var range = document.createRange();\n                                        var sel = window.getSelection();\n                                        el.innerHTML = \"&#65279;\";\n                                        range.setStart(el.childNodes[0], 1);\n                                        range.collapse(true);\n                                        sel.removeAllRanges();\n                                        sel.addRange(range);\n                                        el.focus();\n                                        return;\n                                    }\n                                }\n                            });\n                        }\n                    } catch (e) {\n                        // Silently fail as it means that it isn't the correct element\n                    }\n                }\n            });\n\n            window.onload = function() {\n                // Select the node that will be observed for mutations\n                targetnode = document.querySelector(selector);\n                // Find any current forum display toggle buttons and click them\n                var currentbuttons = document.querySelector('.hsuforum-use-advanced');\n\n                if (currentbuttons) {\n                    currentbuttons.click();\n                    document.body.scrollTop = document.documentElement.scrollTop = 0;\n                }\n\n                // Start observing\n                observer.observe(targetnode, config);\n            };\n        }\n    };\n});\n"],"file":"mod_hsuforum_editor_toggle.min.js"}